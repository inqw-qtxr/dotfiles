typeset -g POWERLEVEL9K_INSTANT_PROMPT=off

# Keep the p10k instant prompt at the very top
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Zinit Installation and Initialization
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

### Zinit Plugins
# Core plugins
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zdharma-continuum/history-search-multi-word

# Important annexes
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# Theme
zinit ice depth=1
zinit light romkatv/powerlevel10k

### Environment Variables
export GPG_TTY=$(tty)
export PYTHONDONTWRITEBYTECODE=1
export HOMEBREW_NO_ENV_HINTS=1
export PATH="$HOME/go/bin:$PATH"
export PATH="$HOME/local/ruby/bin:$PATH"
export PATH="$PATH:$HOME/.gem/ruby/3.0.3"

### Tool Configurations
# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

export EDITOR=nvim

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

# fzf and zoxide
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
eval "$(zoxide init zsh)"

eval "$(op completion zsh)"; compdef _op op

# Atuin
. "$HOME/.atuin/bin/env"
eval "$(atuin init zsh)"

# Cargo
. "$HOME/.cargo/env"

# Tool-specific completions
complete -o nospace -C /opt/homebrew/bin/terraform terraform
complete -o nospace -C /opt/homebrew/bin/vault vault
complete -o nospace -C /opt/homebrew/bin/consul consul
complete -o nospace -C /opt/homebrew/bin/nomad nomad

# Initialize completion system
autoload -Uz compinit bashcompinit
compinit
bashcompinit

### Aliases
alias cd="z"
alias ls="lsd"
alias cat="bat"
alias tls="tmux ls"
alias tma="tmux attach -t"
alias tmn="tmux new -s"
alias tmk="tmux kill-session -t"

export MANPAGER="col -bx | bat -l man"
# export PAGER="less -R"

### Custom Functions
function sesh-sessions() {
  {
    exec </dev/tty
    exec <&1
    local session
    session=$(sesh list -t -c | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt '⚡  ')
    zle reset-prompt > /dev/null 2>&1 || true
    [[ -z "$session" ]] && return
    sesh connect $session
  }
}

zle     -N             sesh-sessions
bindkey -M emacs '\es' sesh-sessions
bindkey -M vicmd '\es' sesh-sessions
bindkey -M viins '\es' sesh-sessions

# Update PATH
if [ -f '/Users/williamhicks/google-cloud-sdk/path.zsh.inc' ]; then
  . '/Users/williamhicks/google-cloud-sdk/path.zsh.inc'
fi

# Enable shell completion
if [ -f '/Users/williamhicks/google-cloud-sdk/completion.zsh.inc' ]; then
  . '/Users/williamhicks/google-cloud-sdk/completion.zsh.inc'
fi

### Theme Configuration
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# if there is a python virtual environment in the home directory, activate it
if [ -d "$HOME/.venv" ]; then
  source "$HOME/.venv/bin/activate"
fi

# load 1password cli zsh-completions


[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
